type Query {
    getAPIs: APIList
    getAPI(id: String!): API
}

type APIList {
    count: Int
    list: [API]
}

type API {
    id: ID!
    name: String
    version: String
    context: String
    provider: String
    organization: String
    description: String
    type: String
    transports: [String]
    hasThumbnail: Boolean
    state: String
    tags: [String]
    categories: [String]
    sdk: [String]
    policies: [String]
    lifecycleStatus: String
    additionalProperties: String
    createdTime: String
    lastUpdatedTime: String
    operations: [Operation]
    apiUsagePolicy: String
    monetization: String
    businessInformation: BusinessInformation
    revision: Revision
    deployments: [Deployment]
    documents: [Document]
    endpointConfig: String
    definition: String
}

type Operation {
    target: String
    verb: String
    scopes: [String]
    authTypeEnabled: Boolean
    operationPolicies: OperationPolicies
    usagePlan: String
}

type OperationPolicies {
    request: [OperationPolicy]
    response: [OperationPolicy]
    fault: [OperationPolicy]
}

type OperationPolicy {
    policyId: String
    policyName: String
    policyVersion: String
    parameters: String
}

type BusinessInformation {
    businessOwner: String
    businessOwnerEmail: String
    technicalOwner: String
    technicalOwnerEmail: String
}

type Revision {
    id: String
    displayName: String
    description: String
    createdTime: String
}

type Deployment {
    name: String
    revisionId: String
    vhost: String
    deployedTime: String
}

type Document {
    documentId: String
    name: String
    type: String
    summary: String
    sourceType: String
    sourceUrl: String
    otherTypeName: String
    inlineContent: String
    visibility: String
    fileName: String
}
