type Query {
    getAPIs: APIList
    getAPI(id: String!): API
    getAPIsByOrganization(org: String!): APIList
}

type APIList {
    count: Int
    list: [API]
}

type API {
    id: ID!
    name: String
    version: String
    context: String
    provider: String
    organization: String
    description: String
    apiProduct: Boolean
    type: String
    transports: [String]
    hasThumbnail: Boolean
    state: String
    tags: [String]
    categories: [Category]
    sdk: [String]
    policies: [String]
    lifecycleStatus: String
    additionalProperties: String
    createdTime: String
    lastUpdatedTime: String
    operations: [Operation]
    authorizationHeader: String
    apiUsagePolicy: String
    monetization: String
    businessInformation: BusinessInformation
    documents: [Document]
    endpointConfig: String
    definition: String
    graphQLSchema: String
    wsdlDefinition: String
    thumbnail: String
    clientCertificates: [Certificate]
    endpointCertificates: [Certificate]
    isRevision: Boolean
    comments: [Comment]
    corsConfiguration: CorsConfiguration
    mediationPolicies: [MediationPolicy]
    advancedPolicies: [AdvancedPolicy]
    designConfigurations: DesignConfiguration
    security: [String]
    productAPIs: [ProductAPI]
}

type Operation {
    target: String
    verb: String
    scopes: [Scope]
    authTypeEnabled: Boolean
    usagePlan: String
    throttlingPolicy: String
    resourceMediationPolicies: [ResourceMediation]
}

type ResourceMediation {
    type: String
    content: String
}

type Scope {
    id: String
    name: String
    displayName: String
    description: String
    bindings: [String]
    shared: Boolean
}

type BusinessInformation {
    businessOwner: String
    businessOwnerEmail: String
    technicalOwner: String
    technicalOwnerEmail: String
}

type Category {
    name: String
    description: String
    organization: String
}

type Document {
    documentId: String
    name: String
    type: String
    summary: String
    sourceType: String
    sourceUrl: String
    otherTypeName: String
    inlineContent: String
    visibility: String
    fileName: String
}

type Certificate {
    alias: String
    apiId: String
    certificate: String
    endpoint: String
    tierName: String
}

type Comment {
    id: String
    content: String
    user: String
}

type CorsConfiguration {
    enabled: Boolean
    accessControlAllowOrigins: [String]
    accessControlAllowCredentials: Boolean
    accessControlAllowHeaders: [String]
    accessControlAllowMethods: [String]
}

type MediationPolicy {
    id: String
    name: String
    type: String
    shared: Boolean
    content: String
}

type AdvancedPolicy {
    id: String
    name: String
    description: String
    defaultLimit: DefaultLimit
    conditionalGroups: [ConditionalGroup]
}

type DefaultLimit {
    type: String
    requestLimit: RequestLimit
    bandwidthLimit: BandwidthLimit
}

type RequestLimit{
    timeUnit: String
    unitTime: Int
    requestCount: Int
}
type BandwidthLimit{
    timeUnit: String
    unitTime: Int
    dataAmount: Int
    dataUnit: String
}

type ConditionalGroup {
    description: String
    defaultLimit: DefaultLimit
    conditions: [Condition]
}

type Condition {
    type: String
    invertCondition: Boolean
    ipCondition: IPCondition
    headerCondition: HeaderCondition
    queryParameterCondition: QueryParameterCondition
    jwtClaimsCondition: JWTClaimCondition
}

type IPCondition {
    type: String
    specificIP: String
    startingIP: String
    endingIP: String
}

type HeaderCondition {
    headerName: String
    headerValue: String
}

type QueryParameterCondition {
    parameterName: String
    parameterValue: String
}

type JWTClaimCondition {
    claimUrl: String
    claimAttribute: String
}

type DesignConfiguration {
    accessControl: String
    accessControlRoles: [String]
    visibility: String
    visibleRoles: [String]
    visibleTenants: [String]
    defaultVersion: Boolean
}

type ProductAPI {
    uuid: String
    name: String
    version: String
    operations: [Operation]
}
